// The protocol states the following:
// The possible actions are A, B, C, D and END
// Each action must be executed at most once
// END ends the session
// Before the session is ended, A and B must be executed
#define $protocol(xa,xb,xc,xd) \
  rec $state<Bool a=xa, Bool b=xb, Bool c=xc, Bool d=xd>; \
  {^^A   where not a: $state<true,b,c,d>; \
   ^^B   where not b: $state<a,true,c,d>; \
   ^C    where not c: $state<a,b,true,d>; \
   ^D    where not d: $state<a,b,c,true>; \
   ^^END where a and b: $end; \
  }
$protocol(false,false,false,false) a(1);
local X<Bool s1, Bool s2, Bool s3, Bool s4>($protocol(s1, s2, s3, s4)(1 of 1) s)
( if (s1)
  then sync(1,s)
       {^^B where not s2: X<s1,true,s3,s4>(s);
        ^^END where s2:
       }
  else sync(1,s)
       {^^A where not s1: X<true,s2,s3,s4>(s);
        ^^B where not s2: X<s1,true,s3,s4>(s);
        ^C where not s2 and not s3: X<s1,s2,true,s4>(s);
        ^D where not s3 and not s4: X<s1,s2,s3,true>(s);
       }
)
s=new a(1 of 1);
X<false,false,false,false>(s);
