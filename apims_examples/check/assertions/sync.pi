#define $type \
  1->2:Bool as x; \
  1->2:Bool as y; \
  {^^A where x or y: \
    {^^A where x: \
      2->1:Bool as z where x or z; \
      $end; \
     ^^B where y: \
      2->1:Bool as z where x or z; \
      $end;  \
    } \
   ^^B where not x or not y: \
    $end; \
   ^C where x or y: \
    $end; \
  }
$type a(1,2);
s=new a(2 of 2);
s[1]>>q1;
s[1]>>q2;
sync(2,s)
{^^A where q2 or q1:
  sync(2,s)
  {^^A where q1:
    s[1]<<false;
   ^^B where q2:
    s[1]<<true;
  }
 ^^B where not (q1 and q2):
 ^C where q1:
}
