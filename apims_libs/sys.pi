#define $sys rec $sys. \
  2=>1 \
  {^CountArgs: 1=>2<Int>; $sys \
  ,^GetArg: 2=>1<Int>; 1=>2{^Some: 1=>2<String>; $sys, ^None: $sys} \
  ,^End: Gend \
  }
#define __ARGC(x) HOST("  ", x, "=libpi::IntValue(__system_args.size());")
#define __ARGV(x,i) HOST("  ", x, "=libpi::StringValue(__system_args[ mpz_get_ui(", i, ".GetValue())]);")
ch sys = new {pure 1, 2}@$sys in
( Int argc=0;
  __ARGC(argc);
  def Sys() =
    ses s = new (1 od 2)@sys;
    ( Sys()
    | def SysSession(s: $sys@(1 of 2) ) =
        s[2]>>
        {^CountArgs: s[2]<<argc;
                     SysSession(s)
        ,^GetArg:    s[2]>>idx;
                     if (0<=idx) and (idx+1<=argc)
                     then s[2]<<^Some;
                          String arg="";
                          __ARGV(arg,idx);
                          s[2]<<arg;
                          SysSession(s)
                     else s[2]<<^None;
                          SysSession(s)
        ,^End:       end
        }
      in SysSession(s)
    )
  in Sys()
) |
