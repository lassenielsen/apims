#include<console.pi>
#include<struct/list.pi>
#include<math/fib.pi>

global PrintIntList($list(Int)(2 of 1 pure,2) l)
( c=new console(2 of 2);
  c[1]<<^PutString<<"list start";
  local X($list(Int)(2 of 1 pure,2) l, $console(2 of 1,2) c)
  ( l[1]<<^pop;
    l[1]>>
    {^cons:
      l[1]>>v>>tail;
      c[1]<<^PutInt<<v;
      X(tail,c);
     ^nil:
      c[1]<<^PutString<<"list end"<<^End;
    }
  )
  X(l,c);
)
#define $intlistresult 2->1:$list(Int)(2 of 1 pure,2); $end;
global RangeIntList(Int idx, $list(Int)(2 of 1 pure,2) dest, $intlistresult(2 of 1,2) return)
( if idx<=0
  then return[1]<<dest;
  else dest[1]<<^cons<<idx-5*(idx/5);
       RangeIntList(idx-1,dest,return);
)
ilist=new list(2 of 2);
ilist<<Int;
global $intlistresult r1,r2;
RangeIntList(10000,ilist,r2);
|
r1[2]>>ilist;
//ilist[1]<<^snoc<<2<<^snoc<<4<<^snoc<<6;
//ilist[1]<<^copy;
//ilist[1]>>cpy;
//( PrintIntList(cpy);
//| x = new cb(2 of 2);
  ilist[1]<<^apply<<fib;
  PrintIntList(ilist);
//  ilist[1]<<^delete;
//)
