#include<console.pi>
#include<struct/set.pi>

global PrintIntSet($set(Int)(2 of 1 pure,2) s)
( c=new console(2 of 2);
  c[1]<<^PutString<<"set start"<<^End;
  local X($set(Int)(2 of 1 pure,2) l)
  ( l[1]<<^Dissolve;
    l[1]>>
    {^NonEmpty:
      l[1]>>v>>lt>>rt;
      c=new console(2 of 2);
      c[1]<<^PutInt<<v<<^End;
      ( X(lt);
      | X(rt);
      )
     ^Empty:
    }
  )
  X(s);
)
#define $intsetresult 2->1:$set(Int)(2 of 1 pure,2); $end;
global RangeIntSet(Int idx, $set(Int)(2 of 1 pure,2) dest, $intsetresult(2 of 1,2) return)
( if idx<=0
  then return[1]<<dest;
  else dest[1]<<^Insert<<idx-100*(idx/100);
       RangeIntSet(idx-1,dest,return);
)
global 2->1:Int;2->1:Int;1->2:Bool;$end; leqint(1 pure,2);
local pure service LeqInt(leqint (1 of 2) s)
( s[2]>>lhs>>rhs;
  s[2]<<lhs<=rhs;
)
|
iset=new set(2 of 2);
iset<<Int;
iset[1]<<leqint;
global $intsetresult r1,r2;
RangeIntSet(10000,iset,r2);
|
r1[2]>>iset;
PrintIntSet(iset);
