#pragma once

HOSTHEADER("#include <iostream>");
#define $console rec $console; \
  2->1 \
  {^PutString: 2->1:String; $console; \
   ^PutInt:    2->1:Int;    $console; \
   ^GetString: 1->2:String; $console; \
   ^GetInt:    1->2:Int; $console; \
   ^End:       $end; \
   ^Stop:      $end; \
  }
global $console console(1,2);
local Console()
( s = new console(1 of 2);
  local ConsoleSession($console(1 of 1,2) s)
  ( s[2]>>
    {^PutString: s[2]>>str;
                 HOST("std::cout << (", str, ")->GetValue() << std::endl;");
                 ConsoleSession(s);
     ^PutInt:    s[2]>>i;
                 HOST("std::cout << (", i, ")->ToString() << std::endl;");
                 ConsoleSession(s);
     ^GetString: String val="";
                 HOST("{ std::string _s; std::cin >> _s; ", val, "=shared_ptr<libpi::String>(new libpi::String(_s)); }");
                 s[2]<<val;
                 ConsoleSession(s);
     ^GetInt:    Int val=0;
                 HOST("{ long _l; std::cin >> _l; ", val, "=shared_ptr<libpi::Int>(new libpi::Int(_l)); }");
                 s[2]<<val;
                 ConsoleSession(s);
     ^End:       Console();
     ^Stop:
    }
  )
  ConsoleSession(s);
)
Console(); |
